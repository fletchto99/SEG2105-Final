package com.name.temp.keeper.Data;

import android.content.Context;

import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.JsonObjectRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONObject;


public class Data{

    private static Data instance;
    private RequestQueue requestQueue;

    private static final String CONTROLLERS_ROOT = "https://fletchto99.com/other/sites/school/seg2105/controllers/";
    private static final String CONTROLLER_GET = "get/";
    private static final String CONTROLLER_UPDATE = "update/";
    private static final String CONTROLLER_REMOVE = "remove/";
    private static final String CONTROLLER_TYPE = ".php";

    private Data(Context context){
        this.requestQueue = Volley.newRequestQueue(context.getApplicationContext());
    }

    public static synchronized Data getInstance(Context context) {
        if (Data.instance == null) {
            Data.instance = new Data(context);
        }
        return Data.instance;
    }

    public void get(final JSONObject data, final String controller, final Response.Listener <JSONObject> listener, final WebErrorListener errorListener){
        String url = CONTROLLERS_ROOT+CONTROLLER_GET+controller+CONTROLLER_TYPE;
        requestQueue.add(new JsonObjectRequest(Request.Method.POST, url, data, listener, generateVolleyErrorListener(errorListener)));
    }

    public void update(final JSONObject data, final String controller, final Response.Listener<JSONObject> listener, final WebErrorListener errorListener){
        String url = CONTROLLERS_ROOT+CONTROLLER_UPDATE+controller+CONTROLLER_TYPE;
        requestQueue.add(new JsonObjectRequest(Request.Method.POST, url, data, listener, generateVolleyErrorListener(errorListener)));
    }

    public void remove(final JSONObject data, final String controller, final Response.Listener<JSONObject>  listener, final WebErrorListener errorListener){
        String url = CONTROLLERS_ROOT+CONTROLLER_REMOVE+controller+CONTROLLER_TYPE;
        requestQueue.add(new JsonObjectRequest(Request.Method.POST, url, data, listener, generateVolleyErrorListener(errorListener)));
    }

    private Response.ErrorListener generateVolleyErrorListener(final WebErrorListener wel) {
        return new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                try {
                    wel.onError(new JSONObject(new String(error.networkResponse.data, "utf-8")));
                } catch ( Exception e ) {
                    //TODO: Handle errors not generated by the conroller?
                }
            }
        };
    }

}